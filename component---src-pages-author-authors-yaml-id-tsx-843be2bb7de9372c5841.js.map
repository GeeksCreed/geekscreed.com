{"version":3,"sources":["webpack://geekscreed.com/./src/components/HeroImage.tsx","webpack://geekscreed.com/./src/components/PostCard.tsx","webpack://geekscreed.com/./src/pages/author/{AuthorsYaml.id}.tsx"],"names":["props","source","post","children","imageData","getImage","className","classnames","G","image","loading","alt","frontmatter","tags","authors","title","published_at","feature_image","featured","primary_author","length","primary_tag","cardContent","Link","to","fields","slug","timeToRead","tabIndex","id","name","Fragment","content","style","backgroundImage","profile_image","data","author","posts","nodes","useTitle","cover_image","bio","website","href","target","rel","facebook","twitter","linkedin","location","map","key"],"mappings":"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","file":"component---src-pages-author-authors-yaml-id-tsx-843be2bb7de9372c5841.js","sourcesContent":["import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport classnames from \"classnames\";\n\ninterface Props {\n  source: any;\n  post?: boolean;\n  children?: React.ReactNode;\n}\n\nconst HeroImage = (props: Props) => {\n  const { source, post, children } = props;\n\n  const imageData = getImage(source);\n\n  return source ? (\n    <section className=\"m-hero with-picture\" data-aos=\"fade\">\n      <div\n        className={classnames(\"m-hero__picture\", {\n          \"in-post\": post,\n        })}\n      >\n        <GatsbyImage image={imageData} loading=\"eager\" alt=\"Plant\" />\n      </div>\n\n      {children}\n    </section>\n  ) : (\n    <section className=\"m-hero no-picture\" data-aos=\"fade\">\n      {children}\n    </section>\n  );\n};\n\nexport default HeroImage;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport TooltipWrapper from \"./TooltipWrapper\";\n\nconst PostCard = (props) => {\n  const { post } = props;\n\n  const { frontmatter } = post;\n\n  const {\n    tags,\n    authors,\n    title,\n    published_at,\n    feature_image,\n    featured,\n  } = frontmatter;\n\n  const primary_author = authors?.length > 0 ? authors[0] : null;\n  const primary_tag = tags?.length > 0 ? tags[0] : null;\n\n  const imageData = getImage(feature_image);\n\n  const cardContent = (\n    <Link\n      to={`/blog${post.fields.slug}`}\n      className=\"m-article-card__info-link\"\n      aria-label={title}\n    >\n      <div>\n        <h2\n          className=\"m-article-card__title js-article-card-title\"\n          title={title}\n        >\n          {title}\n        </h2>\n      </div>\n      <div className=\"m-article-card__timestamp\">\n        <span>{published_at}</span>\n        <span>&bull;</span>\n        <span>{post.timeToRead} min read</span>\n      </div>\n    </Link>\n  );\n\n  return (\n    <article className=\"m-article-card  post\">\n      {/* {{#unless feature_image}}no-picture{{/unless}} */}\n      <div className=\"m-article-card__picture\">\n        <Link\n          to={`/blog${post.fields.slug}`}\n          className=\"m-article-card__picture-link\"\n          aria-hidden=\"true\"\n          tabIndex={-1}\n        >\n          <GatsbyImage\n            className=\"m-article-card__picture-background\"\n            loading=\"lazy\"\n            image={imageData}\n            alt=\"\"\n          />\n        </Link>\n        {primary_author && (<Link\n          to={`/author/${primary_author.id}`}\n          className=\"m-article-card__author js-tooltip\"\n          aria-label={primary_author.name}\n        >\n          <Fragment>\n            {/* data-tippy-content=\"{{t \"Posted by\"}} {{primary_author.name}} {{authors autolink=\"false\" from=\"2\" prefix=(t \"Among with\") separator=\" , \"}}\" */}\n            {/* {{#if primary_author.profile_image}} */}\n            {/* {{else}} */}\n            {/* <div style=\"background-image: url({{asset \"images/default-avatar-square-small.jpg\"}});\"></div> */}\n            {/* {{/if}} */}\n          </Fragment>\n          <TooltipWrapper content={`Posted by ${primary_author.name}`}>\n            <div\n              style={{\n                backgroundImage: `url(${\n                  primary_author.profile_image ||\n                  \"/assets/images/default-avatar-square-small.jpg\"\n                })`,\n              }}\n            />\n          </TooltipWrapper>\n        </Link>\n        )}\n        {featured && (\n          <Link\n            to={`/blog${post.fields.slug}`}\n            className=\"m-article-card__featured js-tooltip\"\n            aria-label=\"Featured\"\n          >\n            {/* \n            data-tippy-content=\"{{t \"Featured\"}}\" \n            */}\n            <span className=\"icon-star\" aria-hidden=\"true\"></span>\n          </Link>\n        )}\n      </div>\n      {primary_tag ? (\n        <div className=\"m-article-card__info\">\n          <Link to={`/tag/${primary_tag.id}`} className=\"m-article-card__tag\">\n            {primary_tag.name}\n          </Link>\n          {cardContent}\n        </div>\n      ) : (\n        <div className=\"m-article-card__info no-tag\">{cardContent}</div>\n      )}\n    </article>\n  );\n};\n\n{\n  /* <div className=\"m-recommended-slider__item glide__slide\">\n    </div> */\n}\n\nexport default PostCard;\n","import React, { Fragment } from \"react\";\nimport { graphql } from \"gatsby\";\nimport { useTitle } from \"hoofd\";\n\nimport HeroImage from \"../../components/HeroImage\";\nimport PostCard from \"../../components/PostCard\";\n\nconst Author = (props) => {\n  const { author, posts } = props.data;\n  const length = posts.nodes.length;\n\n  useTitle(`Posts by ${author.name}`);\n\n  return (\n    <Fragment>\n      <main className=\"main-wrap\">\n        <HeroImage source={author.cover_image}>\n          <div className=\"m-hero__content\" data-aos=\"fade-down\">\n            <div\n              className=\"m-hero-avatar\"\n              style={{\n                backgroundImage: `url(${\n                  author.profile_image ||\n                  \"/images/default-avatar-square-normal.jpg\"\n                })`,\n              }}\n            />\n\n            <h1 className=\"m-hero-title\">{author.name}</h1>\n\n            {author.bio && <p className=\"m-hero-description\">{author.bio}</p>}\n\n            <div className=\"m-hero__meta\">\n              <ul className=\"m-hero-social\">\n                {author.website && (\n                  <li>\n                    <a\n                      href={author.website}\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                      aria-label=\"Website\"\n                    >\n                      {/* aria-label=\"{{t \"Website\"}}\" */}\n                      <span className=\"icon-globe\"></span>\n                    </a>\n                  </li>\n                )}\n                {author.facebook && (\n                  <li>\n                    <a\n                      href={`https://facebook.com/${author.facebook}`}\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                      aria-label=\"Facebook\"\n                    >\n                      <span className=\"icon-facebook\"></span>\n                    </a>\n                  </li>\n                )}\n                {author.twitter && (\n                  <li>\n                    <a\n                      href={`https://twitter.com/${author.twitter}`}\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                      aria-label=\"Twitter\"\n                    >\n                      <span className=\"icon-twitter\"></span>\n                    </a>\n                  </li>\n                )}\n                {author.linkedin && (\n                  <li>\n                    <a\n                      href={`https://linkedin.com/in/${author.linkedin}`}\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                      aria-label=\"Linkedin\"\n                    >\n                      <span className=\"icon-linkedin\"></span>\n                    </a>\n                  </li>\n                )}\n              </ul>\n\n              <ul className=\"m-hero-stats\">\n                <li>\n                  {length\n                    ? `${length} ${length === 1 ? \"post\" : \"posts\"}`\n                    : \"No Posts\"}\n                </li>\n                {author.location && (\n                  <Fragment>\n                    <li>&bull;</li>\n                    <li>{author.location}</li>\n                  </Fragment>\n                )}\n              </ul>\n            </div>\n          </div>\n        </HeroImage>\n\n        <div className=\"l-content\">\n          <div className=\"l-wrapper\" data-aos=\"fade-up\" data-aos-delay=\"300\">\n            <div className=\"l-grid centered\">\n              {posts.nodes.map((post) => (\n                <PostCard post={post} key={post.fields.slug} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </main>\n    </Fragment>\n  );\n};\n\nexport default Author;\n\nexport const query = graphql`\n  query BlogPostsByAuthor($id: String!) {\n    posts: allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          draft: { ne: true }\n          authors: { elemMatch: { id: { eq: $id } } }\n        }\n      }\n      sort: { fields: frontmatter___published_at, order: DESC }\n    ) {\n      nodes {\n        ...PostCard\n      }\n    }\n    author: authorsYaml(id: { eq: $id }) {\n      id\n      name\n      bio\n      location\n      website\n      twitter\n      linkedin\n      profile_image\n      cover_image\n    }\n  }\n`;\n"],"sourceRoot":""}